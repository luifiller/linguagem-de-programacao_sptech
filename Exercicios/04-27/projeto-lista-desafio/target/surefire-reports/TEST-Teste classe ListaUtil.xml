<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="Teste classe ListaUtil" time="0.044" tests="21" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/luifiller/Downloads/projeto-lista-desafio/target/test-classes:/home/luifiller/Downloads/projeto-lista-desafio/target/classes:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.0/junit-jupiter-api-5.6.0.jar:/home/luifiller/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/luifiller/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/luifiller/.m2/repository/org/junit/platform/junit-platform-commons/1.6.0/junit-platform-commons-1.6.0.jar:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.6.0/junit-jupiter-params-5.6.0.jar:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.6.0/junit-jupiter-engine-5.6.0.jar:/home/luifiller/.m2/repository/org/junit/platform/junit-platform-engine/1.6.0/junit-platform-engine-1.6.0.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="user.country" value="BR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk-19/lib"/>
    <property name="sun.java.command" value="/home/luifiller/Downloads/projeto-lista-desafio/target/surefire/surefirebooter1620980614752747330.jar /home/luifiller/Downloads/projeto-lista-desafio/target/surefire 2023-04-27T19-33-40_977-jvmRun1 surefire9408128735928678450tmp surefire_016079178626710789738tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/luifiller/Downloads/projeto-lista-desafio/target/test-classes:/home/luifiller/Downloads/projeto-lista-desafio/target/classes:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.0/junit-jupiter-api-5.6.0.jar:/home/luifiller/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/luifiller/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/luifiller/.m2/repository/org/junit/platform/junit-platform-commons/1.6.0/junit-platform-commons-1.6.0.jar:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.6.0/junit-jupiter-params-5.6.0.jar:/home/luifiller/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.6.0/junit-jupiter-engine-5.6.0.jar:/home/luifiller/.m2/repository/org/junit/platform/junit-platform-engine/1.6.0/junit-platform-engine-1.6.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/luifiller"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/usr/lib/jvm/jdk-19"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/luifiller/Downloads/projeto-lista-desafio"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="surefire.real.class.path" value="/home/luifiller/Downloads/projeto-lista-desafio/target/surefire/surefirebooter1620980614752747330.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.2+7-44"/>
    <property name="user.name" value="luifiller"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.6-76060206-generic"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="/usr/lib/apache-netbeans/java/maven-nblib/netbeans-eventspy.jar"/>
    <property name="localRepository" value="/home/luifiller/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="19.0.2"/>
    <property name="user.dir" value="/home/luifiller/Downloads/projeto-lista-desafio"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="19.0.2+7-44"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="add(): Quando adicionado valor null não altera o tamanho da lista" classname="Teste classe ListaUtil" time="0.016"/>
  <testcase name="count(): Quando a lista possuir 3 valores retorna 3" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="hasDuplicidade(): Quando a lista não possuir valores duplicados deve retornar false" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="getMenor(): Quando a lista estiver vazia deve retornar 0" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="remove(): Quando passado um valor que existe na lista o valor deve ser removido" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="getMaior(): Quando a lista estiver vazia deve retornar 0" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="somar(): Quando a lista possuir valores 30, 10 e 2 deve retornar a soma correta (42)" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="somar(): Quando a lista possuir valores 20, 10, 50, 17 e 2 deve retornar a soma correta (99)" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="add(): Quando adicionado valores positivos e negativos aumenta o tamanho da lista" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="countImpares(): Quando a lista possuir 3 valores ímpares retorna 3" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="hasDuplicidade(): Quando a lista possuir valores duplicados deve retornar true" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="getMenor(): Quando a lista possuir valores deve retornar o menor" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="remove(): Quando passado um valor que não existe, não altera o tamanho da lista" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="count(): Quando a lista estiver vazia deve retornar 0" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="somar(): Quando a lista estiver vazia deve retornar 0" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="countPares(): Quando a lista estiver vazia retorna 0" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="countImpares(): Quando a lista estiver vazia retorna 0" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="countPares(): Quando a lista possuir 6 valores pares retorna 6" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="hasDuplicidade(): Quando a lista estiver vazia deve retornar true" classname="Teste classe ListaUtil" time="0"/>
  <testcase name="remove(): Quando remover um valor null não altera o tamanho da lista" classname="Teste classe ListaUtil" time="0.001"/>
  <testcase name="getMaior(): Quando a lista possuir valores deve retornar o maior" classname="Teste classe ListaUtil" time="0"/>
</testsuite>